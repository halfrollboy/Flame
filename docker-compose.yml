version: '3.5'

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: app/Dockerfile
  #   container_name: profile-container
  #   command: python app/app.py
  #   ports:
  #     - "8080:8080"
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   volumes:
  #       - ./app:/code/app
  #   depends_on:
  #     - mongodb

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./auth_micro/Dockerfile
    command: uvicorn main2:app --reload --host 0.0.0.0 --port 8080
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
        - ./app:/code/app
      
    

  # redis_db:
  #   image: redis:6.2.6-alpine
  #   ports:
  #     - 6379:6379
    

  mongodb:
    image : mongo:4.4.7-focal
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/flame-profile --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s


  db:
    container_name: pg_container
    image: postgres:13.3-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    ports:
      - ${PG_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:5.7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db